plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'cau.gdsc'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	
	// security with jwt
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-root:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // 토큰 추출 및 검증 인터페이스
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 변환 구현체. JWT 클레임 정보를 JSON으로 변환
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // 토큰 추출 및 검증 구현체. 런타임에서만 사용
	testImplementation 'org.springframework.security:spring-security-test'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j' // mysql 드라이버
	runtimeOnly 'com.h2database:h2' // 테스트 DB
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
	useJUnitPlatform()
}
